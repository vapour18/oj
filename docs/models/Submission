# info about Submission.models

Class Submission: Submission Table

# (constants)
# STATUS_ABBR: 2-tuple for status text and its abbreviation

    (field)
        |name|type|attributes|default value|statement

        sid; auto_field; primary_key; ++(self-increasing)

        user; foreign_key to User; auto id field; --( no need to set);foreign key cannot refer to a non-existed object

        problem_index; foreign_key to ContestProblem; django automatically adds a problem_index_id field;--;include contest and problem info

        status; char_field; max_length=20 && use choices tuple STATUS_ABBR(Submission/conf.py) as value; need a default value or not?; also a field status_cn&db_index

        data_cnt; int_field; *; --; refered from problem info

        code_file; file_path_field; default "path" is no use; --; use default_storage&ContentFile

        code_length; int_field; *; --; length of code

        code_language; char_field; max_length=20 && use choices tuple Const.LANG as value; need a default value or not?;--
        submission_time; date_time_filed; auto_now_add; now; added after saved

        run_time; int_field; unit: ms; --

        run_memory; int_field; unit: kb; --

        other_info; text_field; --; ''; str(dict)

    (app_method)
        getById:
            @type: classmethod
            @param: cls, sid
            @return: Submission object
            @exception: Exception( str)
    
        addSubmission:
            @type: classmethod
            @param: cls, user, problem_index,
                    /code_file_path, code_language, code_length
            @return: id of Submission object
            @exception: except & print while( sent to queue)

        rejudgeSubmission:
            @type: classmethod
            @param: cls, s
            @return: True or False
            @exception: except

        updateSubmission:
            @type: classmethod
            @param: cls, sid, judge_info # a python dict
            @statement: used by judge
            @return: True or False
            @exception: except

        submissionList:
            @type: classmethod
            @param: cls, u, c, cp, uname, lang, sta
            @return: filterd Submission object list ranged by page_id
            @exception: except

        submissionListOld:
            Deprecated

        canViewCode:
            @type: classmethod
            @param: cls, s, user
            @return: True of False
            @exception: except

        # to be modified
